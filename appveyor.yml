notifications:
  - provider: Email
    on_build_failure: false
    on_build_success: false
    on_build_status_changed: false

branches:
  only:
    - master

environment:
  matrix:
    # - MINICONDA: "C:\\Miniconda35"
    #   TOX_ENV: "py35"
    - MINICONDA: "C:\\Miniconda35-x64"
      TOX_ENV: "py35"
    # - MINICONDA: "C:\\Miniconda36"
    #   TOX_ENV: "py36"
    - MINICONDA: "C:\\Miniconda36-x64"
      TOX_ENV: "py36"
    # - MINICONDA: "C:\\Miniconda37"
    #   TOX_ENV: "py37"
    - MINICONDA: "C:\\Miniconda37-x64"
      TOX_ENV: "py37"

# init:
#   - set PATH=%MINICONDA%;%MINICONDA%\Scripts;C:\MinGW\msys\1.0\bin;%PATH%
#   - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
#   - "%MINICONDA%/python -V"
#   - "%MINICONDA%/python -c \"import struct;print(8 * struct.calcsize(\'P\'))\""

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # Credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
  # Add miniconda to PATH
  - ps: $env:PATH += "$env:MINICONDA;$env:MINICONDA\Scripts;$env:MINICONDA\bin;"
  - easy_install -U pip
  - pip install tox

build: false

test_script:
  - tox -e %TOX_ENV%
